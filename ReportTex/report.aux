\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}综述}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}串行算法原理简述}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}枚举排序}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}归并排序}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}快速排序}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}并行枚举排序}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}算法设计}{2}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces 主处理器的并行枚举排序伪代码\relax }}{2}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces 从处理器的并行枚举排序伪代码\relax }}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}算法分析}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}技术要点}{3}}
\@writefile{toc}{\contentsline {paragraph}{(1)线程模拟}{3}}
\@writefile{toc}{\contentsline {paragraph}{(2)同步}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}并行归并排序}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}算法设计}{4}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces 正则采样归并排序流程\relax }}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}算法分析}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}技术要点}{5}}
\@writefile{toc}{\contentsline {paragraph}{(1)通信}{5}}
\@writefile{toc}{\contentsline {paragraph}{(2)同步}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}优化}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {5}并行快速排序}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}算法设计}{6}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {4}{\ignorespaces 用于快排的并行划分过程\relax }}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}算法分析}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces 使用并行快排划分进行任务划分\relax }}{7}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{paraBSTBuild}{{1}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}技术要点}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}优化}{7}}
\@writefile{toc}{\contentsline {paragraph}{(1)随机化}{7}}
\@writefile{toc}{\contentsline {paragraph}{(2)尾递归}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces 使用尾递归的快排\relax }}{8}}
\newlabel{tailRecursion}{{2}{8}}
\@writefile{toc}{\contentsline {paragraph}{(3)小规模时使用插入排序}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {6}性能分析}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}实验环境描述}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}在给定数据集上的表现}{8}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces 各排序算法在给定数据集上的表现\relax }}{9}}
\newlabel{size30000}{{1}{9}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces 四种排序方法在不同规模数据集上的表现\relax }}{9}}
\newlabel{differentScale}{{2}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}在不同规模数据集上的表现}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces 各排序算法时间与标准库对比\relax }}{10}}
\newlabel{finalComparison}{{3}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {7}总结}{10}}
